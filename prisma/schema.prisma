generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole    @default(USER)
  accounts      Account[]
  likedBoats    LikedBoat[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([token, email])
}

model PasswordResetToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model LikedBoat {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  userId String  @db.ObjectId
  boatId String  @db.ObjectId
  mmsi   Int
  boat   aisData @relation(fields: [id], references: [id])
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, mmsi])
}

model aisData {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  repeat_indicator  Int?
  mmsi              Int
  nav_status        Int?
  rot_over_range    Boolean?
  rot               Int?
  sog               Int?
  position_accuracy Int?
  x                 Float?
  y                 Float?
  cog               Float?
  true_heading      Int?
  timestamp         Int?
  special_manoeuvre Int?
  spare             Int?
  raim              Boolean?
  sync_state        Int?
  slot_timeout      Int?
  slot_offset       Int? // Allow null values
  original          String?
  time              DateTime?   @db.Timestamp
  LikedBoat         LikedBoat[]
}

enum UserRole {
  USER
  ADMIN
}